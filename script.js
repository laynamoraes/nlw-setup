const form = document.querySelector("#form-habits") // estamamos selecionando atrav√©s do ID o formul√°rio que est√° no HTML
const nlwSetup = new NLWSetup(form) // inserimos a biblioteca NLWSetup criada pela Rocketseat
const button = document.querySelector("header button") // selecionamos o but√£o que est√° no HTML para que possamos acrescentar um evento

button.addEventListener("click", add) // estamos adicionando um evento para quando o bot√£o for clickado ele possa chamar a fun√ß√£o 'add'
form.addEventListener("change", save) // estamos adicionando um evento para quando houver uma mudan√ßa na p√°gina (selecionarmos checked em um dos checkbox) ele possa chamar a fun√ß√£o 'save'

function add() {
  const today = new Date().toLocaleDateString("pt-br").slice(0, -5) // o Date serve para inserirmos uma data, o 2¬∫ elemento converte a data em uma string e por √∫ltimo utilizamos o slice para reduzirmos a data em apenas dia e m√™s
  const dayExists = nlwSetup.dayExists(today) // a fun√ß√£o dayExists verifica se o dia j√° foi criado no app

  if (dayExists) {
    alert("Dia j√° incluso üö´")
    return // o return serve para que o restante da fun√ß√£o n√£o seja executada e ela pare nesse trecho do c√≥digo
  }

  alert("Adicionado com sucesso ‚úÖ")
  nlwSetup.addDay(today)
}

function save() {
  localStorage.setItem("NLWSetup@habits", JSON.stringify(nlwSetup.data)) // localStorage √© usado para armazenar dados no navegador e atrav√©s do setItem criamos um par chave/valor, sendo o valor um objeto vindo da biblioteca, e por isso usamos o JSON.stringify para transform√°-lo em uma string
}

const data = JSON.parse(localStorage.getItem("NLWSetup@habits")) || {} // agora transformamos a string em um objeto novamente
nlwSetup.setData(data) // utilizamos esses dados para montar a tabela de h√°bitos
nlwSetup.load() // a fun√ß√£o renderiza tudo na tela
